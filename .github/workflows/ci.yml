name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    
    - name: Configure poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    
    - name: Cache poetry dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      run: poetry install
    
    - name: Run tests
      run: poetry run pytest -v
    
    - name: Run linting
      run: |
        poetry run black --check .
        poetry run isort --check-only .
    
    - name: Test import and basic functionality
      run: poetry run python test_warnings_fixed.py

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    
    - name: Build package
      run: poetry build
    
    - name: Check build artifacts
      run: |
        ls -la dist/
        poetry run pip install dist/*.whl
        poetry run python -c "from structure_align import StructuralAligner; print('âœ… Package installed and imports successfully')" 